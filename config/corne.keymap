/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS DOT BSPC>;
};
&led_strip {
    chain-length = <27>;
};

/ {
        behaviors {
            minuscr: minus_underscore {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp MINUS>, <&kp UNDER>;
            };
            quotes: single_double {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp DQT>, <&kp SQT>;
            };
            gresc: grave_escape {
                mods = <(MOD_LALT|MOD_LSFT|MOD_RALT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            slashes: fslh_bslh {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp FSLH>, <&kp BSLH>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
            backdel: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp BSPC>, <&kp DEL>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
            hm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//                               |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I   |  O  |  P  |
//                               |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K   |  L  |  ;  |
//                               |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,   |  .  |  /  |
//                                           | ESC | TAB | SPC |   | ENT | CAPS | BSPC |
                        bindings = <
   &none &kp Q       &kp W       &kp E      &kp R      &kp T       &kp Y   &kp U      &kp I      &kp O       &kp P          &none
   &none &hm LSHFT A &hm LCTRL S &hm LWIN D &hm LALT F &kp G       &kp H   &hm RALT J &hm RWIN K &hm RCTRL L &hm RSHFT SEMI &none
   &none &kp Z       &kp X       &kp C      &kp V      &kp B       &kp N   &kp M      &kp COMMA  &kp DOT     &slashes       &none
                                 &gresc     &lt 1 TAB  &kp SPACE   &kp RET &lt 2 CAPS &backdel
                        >;
                };
                lower_layer {
 // -----------------------------------------------------------------------------------------
 //                                                      | BT1 | BT2 | BT3 | BTC | OUT |   |     |  7  |  8  |  9  |  +  |
 //                                                      | HUI | SAI | BRI | SPI | RGB |   |     |  4  |  5  |  6  |  -  |
 //                                                      | HUD | SAD | BRD | SPD | EFF |   |     |  1  |  2  |  3  |  =  |
 //                                                                  |     |     |     |   |     |  0  |  .  |
                           bindings = <
   &none &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_CLR      &out OUT_TOG      &none &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp PLUS  &none
   &none &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &rgb_ug RGB_TOG   &none &kp KP_N4 &kp KP_N5 &kp KP_N6 &minuscr  &none
   &none &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &rgb_ug RGB_EFF   &none &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp EQUAL &none
                                         &none           &none           &none             &bl BL_ON &kp KP_N0 &kp KP_DOT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
//                |   !  |   @  |   #  |   $  |   %  |   |   ^  |   &  |   *  |   (   |   )   |
//                |   {  |   [  |   ]  |   }  |      |   | LEFT | DOWN |  UP  | RIGHT |   "   |
//                |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |   F9  |  F10  |
//                              |  F11 |  F12 |      |   |      |      |      |
                        bindings = <
   &none &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &none
   &none &kp LBRC &kp LBKT &kp RBKT &kp RBRC &none       &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &quotes  &none
   &none &kp F1   &kp F2   &kp F3   &kp F4   &kp F5      &kp F6    &kp F7   &kp F8   &kp F9    &kp F10  &none
                           &kp F11  &kp F12  &none       &none     &none    &none
                        >;
                };
        };
};
