/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>
#include <dt-bindings/zmk/outputs.h>

&led_strip {
    chain-length = <27>;
};

&caps_word {
    continue-list = <UNDERSCORE MINUS DOT BSPC>;
};

/ {
        conditional_layers {
            compatible = "zmk,conditional-layers";
            tri_layer {
                if-layers = <1 2>;
                then-layer = <3>;
            };
        };
        behaviors {
            hm: balanced_homerow_mods {
                compatible = "zmk,behavior-hold-tap";
                #binding-cells = <2>;
                tapping-term-ms = <200>;
                quick-tap-ms = <0>;
                flavor = "balanced";
                bindings = <&kp>, <&kp>;
            };
        };

        keymap {
                compatible = "zmk,keymap";
                default_layer {
//                             ╭─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────╮
//                             │  Q  │  W  │  E  │  R  │  T  │   │  Y  │  U  │  I  │  O  │  P  │
//                             ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//                             │  A  │  S  │  D  │  F  │  G  │   │  H  │  J  │  K  │  L  │  ;  │
//                             ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//                             │  Z  │  X  │  C  │  V  │  B  │   │  N  │  M  │  ,  │  .  │  /  │
//                             ╰─────┴─────┴─────┼─────┼─────┤   ├─────┼─────┼─────┴─────┴─────╯ 
//                                               │ TAB │ SPC │   │ BSP │ RET │
//                                               ╰─────┴─────╯   ╰─────┴─────╯
                        bindings = <
   &none &kp Q       &kp W      &kp E      &kp R     &kp T       &kp Y    &kp U     &kp I          &kp O        &kp P           &none
   &none &hm LSHFT A &kp S      &kp D      &kp F     &kp G       &kp H    &kp J     &kp K          &kp L        &hm RSHFT SEMI  &none
   &none &hm LCTRL Z &hm LWIN X &hm LALT C &kp V     &kp B       &kp N    &kp M     &hm RALT COMMA &hm RWIN DOT &hm RCTRL SLASH &none
                                &none      &lt 2 TAB &kp SPACE   &kp BSPC &lt 1 RET &none
                        >;
                };
                raise_layer {
//                      ╭─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────╮
//                      │  !  │  @  │  #  │  $  │  %  │   │  ^  │  &  │  *  │  (  │  )  │
//                      ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//                      │  -  │  "  │  \  │  =  │  `  │   │  ⬅  │  ⬇  │  ⬆  │  ⮕  │     │
//                      ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//                      │  _  │  '  │  |  │  +  │  ~  │   │     │  {  │  [  │  ]  │  }  │
//                      ╰─────┴─────┴─────┼─────┼─────┤   ├─────┼─────┼─────┴─────┴─────╯ 
//                                        │     │     │   │     │     │
//                                        ╰─────┴─────╯   ╰─────┴─────╯
                        bindings = <
   &none &kp EXCL  &kp AT  &kp HASH &kp DLLR  &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR &none
   &none &kp MINUS &kp DQT &kp BSLH &kp EQUAL &kp GRAVE   &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &none    &none
   &none &kp UNDER &kp SQT &kp PIPE &kp PLUS  &kp PIPE    &none     &kp LBRC &kp LBKT &kp RBKT  &kp RBRC &none
                           &none    &trans    &none       &none     &none    &none
                        >;
                };
                lower_layer {
//          ╭─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────╮
//          │ ESC │ F1  │ F2  │ F3  │ F4  │   │     │  7  │  8  │  9  │     │
//          ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//          │ CPW │ F5  │ F6  │ F7  │ F8  │   │     │  4  │  5  │  6  │     │
//          ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//          │ CPS │ F9  │ F10 │ F11 │ F12 │   │     │  1  │  2  │  3  │     │
//          ╰─────┴─────┴─────┼─────┼─────┤   ├─────┼─────┼─────┴─────┴─────╯
//                            │     │     │   │  .  │  0  │
//                            ╰─────┴─────╯   ╰─────┴─────╯
                           bindings = <
   &none &kp ESC    &kp F1 &kp F2  &kp F3  &kp F4    &none      &kp KP_N7 &kp KP_N8  &kp KP_N9 &none &none
   &none &caps_word &kp F5 &kp F6  &kp F7  &kp F8    &none      &kp KP_N4 &kp KP_N5  &kp KP_N6 &none &none
   &none &kp CAPS   &kp F9 &kp F10 &kp F11 &kp F12   &none      &kp KP_N1 &kp KP_N2  &kp KP_N3 &none &none
                           &none   &none   &none     &kp KP_DOT &kp KP_N0 &none
                        >;
                };
                tri_layer {
//     ╭─────┬─────┬─────┬─────┬─────╮   ╭─────┬─────┬─────┬─────┬─────╮
//     │     │     │     │     │     │   │ EFF │ HUI │ SAI │ BRI │ SPI │
//     ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//     │     │     │     │     │     │   │ RGB │ HUD │ SAD │ BRD │ SPD │
//     ├─────┼─────┼─────┼─────┼─────┤   ├─────┼─────┼─────┼─────┼─────┤
//     │     │     │     │     │     │   │ OUT │ BT1 │ BT2 │ BT3 │ BT4 │
//     ╰─────┴─────┴─────┼─────┼─────┤   ├─────┼─────┼─────┴─────┴─────╯
//                       │     │     │   │ BTC │     │
//                       ╰─────┴─────╯   ╰─────┴─────╯
                           bindings = <
   &none &none &none &none &none &none   &rgb_ug RGB_EFF &rgb_ug RGB_HUI &rgb_ug RGB_SAI &rgb_ug RGB_BRI &rgb_ug RGB_SPI &none   
   &none &none &none &none &none &none   &rgb_ug RGB_TOG &rgb_ug RGB_HUD &rgb_ug RGB_SAD &rgb_ug RGB_BRD &rgb_ug RGB_SPD &none   
   &none &none &none &none &none &none   &out OUT_TOG    &bt BT_SEL 0    &bt BT_SEL 1    &bt BT_SEL 2    &bt BT_SEL 3    &none   
                     &none &none &none   &bt BT_CLR      &none           &none
                        >;
                };
        };
};
