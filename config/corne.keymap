/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/rgb.h>

&caps_word {
    continue-list = <UNDERSCORE MINUS DOT BSPC>;
};
&led_strip {
    chain-length = <21>;
};

/ {
        behaviors {
            shft_caps: tap_dance_0 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&kp LSHFT>, <&caps_word>;
            };
            lwr_win: tap_dance_1 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&mo 1>, <&kp LWIN>;
            };
            rise_win: tap_dance_2 {
                compatible = "zmk,behavior-tap-dance";
                #binding-cells = <0>;
                tapping-term-ms = <200>;
                bindings = <&mo 2>, <&kp RWIN>;
            };
            gravesc: grave_escape {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp ESC>, <&kp GRAVE>;
                mods = <(MOD_LALT|MOD_LSFT|MOD_RALT|MOD_RSFT)>;
                keep-mods = <(MOD_LSFT|MOD_RSFT)>;
            };
            bspc_del: backspace_delete {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp BACKSPACE>, <&kp DELETE>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
            tabcaps: tab_caps {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp TAB>, <&kp CAPS>;
                mods = <(MOD_LALT)>;
            };
            qtpipe: sqt_pipe {
                compatible = "zmk,behavior-mod-morph";
                #binding-cells = <0>;
                bindings = <&kp SQT>, <&kp BSLH>;
                mods = <(MOD_LALT|MOD_RALT)>;
            };
        };

        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//   |      |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I   |  O  |  P  |      |
//   |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K   |  L  |  ;  |  '   |
//   | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,   |  .  |  /  | SHFT |
//                      | ESC | LWR | SPC |   | ENT | RISE | BSPC |
                        bindings = <
   &none      &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &none
   &tabcaps   &kp A &kp S &kp D &kp F &kp G   &kp H &kp J  &kp K     &kp L   &kp SEMI &qtpipe
   &shft_caps &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
           &gravesc &lwr_win &mt LALT SPACE   &mt RALT RET &rise_win &bspc_del
                        >;
                };
                lower_layer {
 // -----------------------------------------------------------------------------------------
 //    |     |     |     |     |     |   |     |  7  |   8  |  9  |     |
 //    |     |     |     |     |     |   |     |  4  |   5  |  6  |     |
 //    |     |     |     |     |     |   |     |  1  |   2  |  3  |     |
 //                |     |     |     |   |     |  .  |   0  |
                        bindings = <
   &none &none &none &none &none &none   &none &kp KP_N7  &kp KP_N8 &kp KP_N9 &none &none
   &none &none &none &none &none &none   &none &kp KP_N4  &kp KP_N5 &kp KP_N6 &none &none
   &none &none &none &none &none &none   &none &kp KP_N1  &kp KP_N2 &kp KP_N3 &none &none
                     &none &none &none   &none &kp KP_DOT &kp KP_N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
//                |   !  |   @  |   #  |   $  |   %  |   |   ^  |   &  |   *  |   (   |   )   |
//                |   {  |   [  |   ]  |   }  |   =  |   | LEFT | DOWN |  UP  | RIGHT |   -   |
//                |  F1  |  F2  |  F3  |  F4  |  F5  |   |  F6  |  F7  |  F8  |   F9  |  F10  |
//                              |  F11 |  F12 |      |   |      |      |      |
                        bindings = <
   &none &kp EXCL &kp AT   &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp LPAR  &kp RPAR  &none
   &none &kp LBRC &kp LBKT &kp LBKT &kp LBRC &kp EQUAL   &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &kp MINUS &none
   &none &kp F1   &kp F2   &kp F3   &kp F4   &kp F5      &kp F6    &kp F7   &kp F8   &kp F9    &kp F10   &none
                           &kp F11  &kp F12  &none       &none     &none    &none
                        >;
                };
        };
};
