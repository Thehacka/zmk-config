/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
        keymap {
                compatible = "zmk,keymap";

                default_layer {
// -----------------------------------------------------------------------------------------
//  |  ESC |  Q  |  W  |  E  |  R  |  T  |   |  Y  |  U   |  I  |  O  |  P  | BKSP |
//  |  TAB |  A  |  S  |  D  |  F  |  G  |   |  H  |  J   |  K  |  L  |  ;  |  '   |
//  | SHFT |  Z  |  X  |  C  |  V  |  B  |   |  N  |  M   |  ,  |  .  |  /  | SHFT |
//                     | CTRL| LWR | SPC |   | ENT | RISE | ALT |
                        bindings = <
   &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y   &kp U  &kp I     &kp O   &kp P    &kp BSPC
   &kp TAB   &kp A &kp S &kp D &kp F &kp G   &kp H   &kp J  &kp K     &kp L   &kp SEMI &kp SQT
   &kp LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N   &kp M  &kp COMMA &kp DOT &kp FSLH &kp RSHFT
                 &kp LCTRL &mo 1 &kp SPACE   &kp RET &mo 2  &kp RALT
                        >;
                };
                lower_layer {
// -----------------------------------------------------------------------------------------
//          |  DEL |       |      |      |     |     |   |  #  |  7  |  8  |  9  | NLK | BKSP |
//          | CAPS |       |      |      |     |     |   |  +  |  4  |  5  |  6  |  -  |   =  |
//          | SHFT | LCTRL |  WIN | RALT |     |     |   |  *  |  1  |  2  |  3  |  /  |   %  |
//                                |      |     |     |   |     |  .  |  0  |
                        bindings = <
   &kp DEL   &none     &none    &none    &none &none   &kp HASH &kp KP_N7 &kp KP_N8 &kp KP_N9 &kp KP_NUM &kp BACKSPACE
   &kp CAPS  &none     &none    &none    &none &none   &kp PLUS &kp KP_N4 &kp KP_N5 &kp KP_N6 &kp MINUS  &kp EQUAL
   &sk LSHFT &sk LCTRL &sk LWIN &sk LALT &none &none   &kp STAR &kp KP_N1 &kp KP_N2 &kp KP_N3 &kp SLASH  &kp PERCENT
                                &none    &none &none   &none    &kp DOT   &kp KP_N0
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
//          |   [  |   !  |   @  |   #  |   $  |   %  |   |   ^  |   &  |   *  |   `   |   \   |   ]   |
//          |   {  |   (  |      |      |      |      |   | LEFT | DOWN |  UP  | RIGHT |   )   |   }   |
//          |  F1  |  F2  |  F3  |  F4  |  F5  |  F6  |   |  F7  |  F8  |  F9  |  F10  |  F11  |  F12  |
//                               |      |      |      |   |      |      |      |
                        bindings = <
   &kp LBKT &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS &kp STAR &kp GRAVE &kp BSLH &kp RBKT
   &kp LBRC &kp LPAR &none  &none    &none    &none       &kp LEFT  &kp DOWN &kp UP   &kp RIGHT &kp RPAR &kp RBRC
   &kp F1   &kp F2   &kp F3 &kp F4   &kp F5   &kp F6      &kp F7    &kp F8   &kp F9   &kp F10   &kp F11  &kp F12
                            &none    &none    &none       &none     &none    &none
                        >;
                };
        };
};
